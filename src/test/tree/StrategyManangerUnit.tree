StrategyManagerUnit.t.sol
├── initialize
│   └── when initialize called again
│       └── it should revert
├── depositIntoStrategy()
│   ├── when deposits paused
│   │   └── it should revert
│   ├── when re-entering
│   │   └── it should revert
│   ├── when strategy is not whitelisted
│   │   └── it should revert
│   ├── when token safeTransferFrom() reverts
│   │   └── it should revert
│   └── when token safeTransferFrom() succeeds
│       ├── when staker has existing shares in strategy (not first deposit)
│       │   └── stakerStrategyListLength is unchanged and shares, nonce increase
│       ├── when staker has no existing shares in strategy (first deposit)
│       │   └── stakerStrategyListLength increases by 1 and shares, nonce increase
│       ├── when delegated to a operator ***
│       │   └── it should deposit successfully with shares and nonce increase, including delegated shares
│       └── when staker is not delegated
│           └── it should deposit successfully with shares and nonce increase
├── depositIntoStrategyWithSignature()
│   ├── when deposits paused
│   │   └── it should revert
│   ├── when re-entering
│   │   └── it should revert
│   ├── when signature expired
│   │   └── it should revert
│   ├── when deposits paused and strategy not whitelisted
│   │   └── it should revert
│   ├── when staker is a EOA
│   │   ├── when signature verification fails
│   │   │   └── it should revert
│   │   └── when signature verification succeeds
│   │       ├── when token safeTransferFrom reverts
│   │       │   └── it should revert
│   │       └── when token safeTransferFrom succeeds
│   │           ├── when delegated to a operator
│   │           │   └── it should deposit successfully with shares and nonce increase, including delegated shares
│   │           └── when staker is not delegated
│   │               └── it should deposit successfully with shares and nonce increase
│   └── when staker is a contract
│       ├── when contract isn't EIP1271 compliant
│       │   └── it should revert
│       ├── when signature verification fails, isValidSignature() return != EIP1271_MAGICVALUE
│       │   └── it should revert
│       └── when signature verification succeeds, isValidSignature() returns EIP1271_MAGICVALUE
│           ├── when token safeTransferFrom reverts
│           │   └── it should revert
│           └── when token safeTransferFrom succeeds
│               ├── when delegated to a operator ***
│               │   └── it should deposit successfully with shares and nonce increase, including delegated shares
│               └── when staker is not delegated
│                   └── it should deposit successfully with shares and nonce increase
├── removeShares()
│   ├── when not called by DelegationManager
│   │   └── it should revert
│   ├── when share amount is 0
│   │   └── it should revert
│   ├── when share amount is too high, higher than deposited amount
│   │   └── it should revert
│   ├── when the share amount is equal to the deposited amount
│   │   └── staker shares should be 0 with decremented stakerStrategyListLength
│   └── when the share amount is less than the deposited amount
│       └── staker shares should now be deposited - shares amount, unchanged stakerStrategyListLength
├── addShares()
│   ├── when not called by DelegationManager
│   │   └── it should revert
│   ├── when share amount is 0
│   │   └── it should revert
│   ├── when staker is 0 address
│   │   └── it should revert
│   ├── when adding shares with 0 existing shares
│   │   └── it should increase shares and increment stakerStrategyListLength
│   └── when adding shares with > 0 existing shares
│       └── it should increase shares, unchanged stakerStrategyListLength
├── withdrawSharesAsTokens()
│   ├── when not called by DelegationManager
│   │   └── it should revert
│   └── when calling a deposited strategy
│   │   └── it should withdraw tokens from strategy with token balanceOf() update
├── setStrategyWhitelister()
│   ├── when not called by owner
│   │   └── it should revert
│   └── when called by owner address
│       └── it should update strategyWhitelister address
├── addStrategiesToDepositWhitelist()
│   ├── when not called by strategyWhitelister address
│   │   └── it should revert
│   ├── when adding one single strategy that is already whitelisted
│   │   └── it should not emit StrategyAddedToDepositWhitelist with mapping still true
│   ├── when adding one single strategy
│   │   └── it should whitelist the new strategy with mapping set to true
│   └── when adding multiple strategies to whitelist
│       └── it should whitelist all new strategies with mappings set to true
└── removeStrategiesFromDepositWhitelist()
    ├── when not called by strategyWhitelister address
    │   └── it should revert
    ├── when removing one single strategy that is not whitelisted
    │   └── it shouldn't emit StrategyRemovedFromDepositWhitelist with mapping still false
    ├── when removing one single strategy
    │   └── it should de-whitelist the new strategy with mapping set to false
    └── when adding multiple strategies to whitelist
        └── it should de-whitelist all specified strategies with mappings set to false